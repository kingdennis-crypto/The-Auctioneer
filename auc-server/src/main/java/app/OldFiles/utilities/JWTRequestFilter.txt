package app.utilities;

import app.APIConfig;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

@Component
public class JWTRequestFilter extends OncePerRequestFilter {

    @Autowired
    APIConfig apiConfig;

    @Override
    public void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
            throws IOException, ServletException {

        String servletPath = request.getServletPath();

        if (HttpMethod.OPTIONS.matches(request.getMethod())) {
//             || this.apiConfig.SECURED_PATHS.stream().noneMatch(servletPath::startsWith)
            filterChain.doFilter(request, response);

            return;
        }

        String encrtpyedToken = request.getHeader(HttpHeaders.AUTHORIZATION);

        if (encrtpyedToken == null) {
            response.sendError(HttpServletResponse.SC_UNAUTHORIZED, "No token provided. You need to login first.");
        }

        JWToken jwToken = null;

        try {
            jwToken = JWToken.decode(encrtpyedToken.replace("Bearer ", ""), this.apiConfig.getPassphrase());

        } catch (RuntimeException e) {
            response.sendError(HttpServletResponse.SC_UNAUTHORIZED, e.getMessage() + " You need to login first.");

            return;
        }
    }
}
